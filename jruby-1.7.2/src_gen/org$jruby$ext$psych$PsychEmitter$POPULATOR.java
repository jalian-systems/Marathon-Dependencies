/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$psych$PsychEmitter$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$start_stream(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "start_stream", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "start_stream", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("start_stream", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$initialize(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$canonical_set(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "canonical_set", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "canonical_set", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("canonical=", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$indentation_set(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "indentation_set", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "indentation_set", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("indentation=", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$start_mapping(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "start_mapping", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "start_mapping", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("start_mapping", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$end_mapping(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "end_mapping", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "end_mapping", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("end_mapping", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$end_document(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "end_document", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "end_document", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("end_document", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$line_width_set(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "line_width_set", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "line_width_set", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("line_width=", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$3$0$start_document(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 3, "start_document", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "start_document", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("start_document", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$canonical(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "canonical", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "canonical", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("canonical", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$start_sequence(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "start_sequence", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "start_sequence", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("start_sequence", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$end_sequence(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "end_sequence", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "end_sequence", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("end_sequence", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$scalar(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "scalar", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "scalar", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("scalar", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$1$0$alias(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "alias", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "alias", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("alias", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$end_stream(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "end_stream", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "end_stream", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("end_stream", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$line_width(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "line_width", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "line_width", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("line_width", javaMethod);
        javaMethod = new org.jruby.ext.psych.PsychEmitter$INVOKER$i$0$0$indentation(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "indentation", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.psych.PsychEmitter.class, "indentation", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("indentation", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","start_stream","start_stream");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","canonical_set","canonical=");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","indentation_set","indentation=");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","start_mapping","start_mapping");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","end_mapping","end_mapping");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","end_document","end_document");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","line_width_set","line_width=");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","start_document","start_document");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","canonical","canonical");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","start_sequence","start_sequence");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","end_sequence","end_sequence");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","scalar","scalar");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","alias","alias");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","end_stream","end_stream");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","line_width","line_width");
        runtime.addBoundMethod("org.jruby.ext.psych.PsychEmitter","indentation","indentation");
    }
    static {
     }
}
