/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$javasupport$JavaAccessibleObject$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$synthetic_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "synthetic_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "synthetic_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("synthetic?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$declaring_class(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declaring_class", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "declaring_class", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declaring_class", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$1$0$annotation(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "annotation", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "annotation", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("annotation", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$modifiers(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "modifiers", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "modifiers", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("modifiers", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$isAccessible(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "isAccessible", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "isAccessible", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("accessible?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$1$0$setAccessible(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "setAccessible", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "setAccessible", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("accessible=", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("name", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$annotations(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "annotations", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "annotations", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("annotations", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$declared_annotations(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_annotations", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "declared_annotations", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_annotations", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$to_string(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_string", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "to_string", org.jruby.RubyString.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        cls.addMethodAtBootTimeOnly("to_string", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$annotations_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "annotations_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "annotations_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("annotations?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$1$0$same(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "same", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "same", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("equal?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$declared_annotations_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_annotations_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "declared_annotations_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_annotations?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$1$0$op_equal(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_equal", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "op_equal", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("==", javaMethod);
        cls.addMethodAtBootTimeOnly("eql?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$0$0$hash(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "hash", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "hash", org.jruby.RubyFixnum.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("hash", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaAccessibleObject$INVOKER$i$1$0$annotation_present_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "annotation_present_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaAccessibleObject.class, "annotation_present_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("annotation_present?", javaMethod);
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","synthetic_p","synthetic?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","declaring_class","declaring_class");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","annotation","annotation");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","modifiers","modifiers");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","isAccessible","accessible?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","setAccessible","accessible=");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","name","name");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","annotations","annotations");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","declared_annotations","declared_annotations");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","to_string","to_s");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","annotations_p","annotations?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","same","equal?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","declared_annotations_p","declared_annotations?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","op_equal","==");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","hash","hash");
        runtime.addBoundMethod("org.jruby.javasupport.JavaAccessibleObject","annotation_present_p","annotation_present?");
    }
    static {
     }
}
