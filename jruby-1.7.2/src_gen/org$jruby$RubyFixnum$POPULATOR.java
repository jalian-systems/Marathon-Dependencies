/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$RubyFixnum$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyFixnum$INVOKER$s$1$0$induced_from(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "induced_from", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "induced_from", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("induced_from", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyFixnum","induced_from","induced_from");
        }
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_aref(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_aref", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_aref", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("[]", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$id2name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "id2name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "id2name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("id2name", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$div_div(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "div_div", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "div_div", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("div", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_ge(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_ge", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_ge", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly(">=", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_cmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_cmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_cmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<=>", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$to_s(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "to_s", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "to_s", org.jruby.RubyString.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_equal(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_equal", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_equal", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("==", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_xor(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_xor", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_xor", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("^", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_pow(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_pow", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_pow", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("**", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$op_uminus(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "op_uminus", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_uminus", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("-@", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_and(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_and", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_and", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("&", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$divmod(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "divmod", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "divmod", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("divmod", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_mod(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_mod", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_mod", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("%", javaMethod);
        cls.addMethodAtBootTimeOnly("modulo", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_mul(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_mul", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_mul", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("*", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_plus(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_plus", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_plus", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("+", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$times(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "times", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "times", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("times", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$zero_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "zero_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "zero_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("zero?", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_div(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_div", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_div", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("/", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$to_f(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_f", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "to_f", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_f", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_minus(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_minus", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_minus", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("-", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_rshift(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_rshift", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_rshift", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly(">>", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_le(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_le", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_le", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<=", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_lshift(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_lshift", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_lshift", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<<", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$size(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "size", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "size", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("size", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$op_neg(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "op_neg", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_neg", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("~", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$abs(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "abs", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "abs", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("abs", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_or(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_or", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_or", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("|", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_gt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_gt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_gt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly(">", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$op_lt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_lt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "op_lt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_aref","[]");
        runtime.addBoundMethod("org.jruby.RubyFixnum","id2name","id2name");
        runtime.addBoundMethod("org.jruby.RubyFixnum","div_div","div");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_ge",">=");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_cmp","<=>");
        runtime.addBoundMethod("org.jruby.RubyFixnum","to_s","to_s");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_equal","==");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_xor","^");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_pow","**");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_uminus","-@");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_and","&");
        runtime.addBoundMethod("org.jruby.RubyFixnum","divmod","divmod");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_mod","%");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_mul","*");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_plus","+");
        runtime.addBoundMethod("org.jruby.RubyFixnum","times","times");
        runtime.addBoundMethod("org.jruby.RubyFixnum","zero_p","zero?");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_div","/");
        runtime.addBoundMethod("org.jruby.RubyFixnum","to_f","to_f");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_minus","-");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_rshift",">>");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_le","<=");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_lshift","<<");
        runtime.addBoundMethod("org.jruby.RubyFixnum","size","size");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_neg","~");
        runtime.addBoundMethod("org.jruby.RubyFixnum","abs","abs");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_or","|");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_gt",">");
        runtime.addBoundMethod("org.jruby.RubyFixnum","op_lt","<");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$1$0$quo(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "quo", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "quo", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("quo", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$to_sym(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_sym", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "to_sym", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_sym", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyFixnum","quo","quo");
        runtime.addBoundMethod("org.jruby.RubyFixnum","to_sym","to_sym");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$even_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "even_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "even_p", org.jruby.RubyBoolean.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("even?", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$odd_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "odd_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "odd_p", org.jruby.RubyBoolean.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("odd?", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$magnitude(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "magnitude", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "magnitude", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("magnitude", javaMethod);
        javaMethod = new org.jruby.RubyFixnum$INVOKER$i$0$0$pred(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "pred", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyFixnum.class, "pred", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("pred", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyFixnum","even_p","even?");
        runtime.addBoundMethod("org.jruby.RubyFixnum","odd_p","odd?");
        runtime.addBoundMethod("org.jruby.RubyFixnum","magnitude","magnitude");
        runtime.addBoundMethod("org.jruby.RubyFixnum","pred","pred");
        }
    }
    static {
     }
}
