/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$RubyMath$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$cosh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "cosh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "cosh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cosh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("cosh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$ldexp(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "ldexp", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "ldexp", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("ldexp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("ldexp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$atan(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "atan", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atan", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atan", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atan", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$frexp(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "frexp", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "frexp", org.jruby.RubyArray.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("frexp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("frexp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$asin(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "asin", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "asin", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("asin", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("asin", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$cos(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "cos", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "cos", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cos", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("cos", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$acosh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "acosh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "acosh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("acosh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("acosh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$erf(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "erf", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "erf", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("erf", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("erf", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sqrt(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sqrt", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sqrt", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sqrt", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sqrt", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$log2(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "log2", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log2", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("log2", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log2", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sinh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sinh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sinh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sinh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sinh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$log(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "log", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("log", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$atanh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "atanh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atanh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atanh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atanh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$log10(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "log10", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log10", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("log10", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log10", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$tanh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "tanh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "tanh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("tanh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("tanh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$exp(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "exp", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "exp", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("exp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("exp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$atan2(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "atan2", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atan2", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atan2", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atan2", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$hypot(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "hypot", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "hypot", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("hypot", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("hypot", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sin(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sin", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sin", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sin", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sin", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$asinh(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "asinh", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "asinh", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("asinh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("asinh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$erfc(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "erfc", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "erfc", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("erfc", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("erfc", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$tan(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "tan", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "tan", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("tan", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("tan", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$acos(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "acos", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "acos", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("acos", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("acos", moduleMethod);
        runtime.addBoundMethod("org.jruby.RubyMath","cosh","cosh");
        runtime.addBoundMethod("org.jruby.RubyMath","ldexp","ldexp");
        runtime.addBoundMethod("org.jruby.RubyMath","atan","atan");
        runtime.addBoundMethod("org.jruby.RubyMath","frexp","frexp");
        runtime.addBoundMethod("org.jruby.RubyMath","asin","asin");
        runtime.addBoundMethod("org.jruby.RubyMath","cos","cos");
        runtime.addBoundMethod("org.jruby.RubyMath","acosh","acosh");
        runtime.addBoundMethod("org.jruby.RubyMath","erf","erf");
        runtime.addBoundMethod("org.jruby.RubyMath","sqrt","sqrt");
        runtime.addBoundMethod("org.jruby.RubyMath","log2","log2");
        runtime.addBoundMethod("org.jruby.RubyMath","sinh","sinh");
        runtime.addBoundMethod("org.jruby.RubyMath","log","log");
        runtime.addBoundMethod("org.jruby.RubyMath","atanh","atanh");
        runtime.addBoundMethod("org.jruby.RubyMath","log10","log10");
        runtime.addBoundMethod("org.jruby.RubyMath","tanh","tanh");
        runtime.addBoundMethod("org.jruby.RubyMath","exp","exp");
        runtime.addBoundMethod("org.jruby.RubyMath","atan2","atan2");
        runtime.addBoundMethod("org.jruby.RubyMath","hypot","hypot");
        runtime.addBoundMethod("org.jruby.RubyMath","sin","sin");
        runtime.addBoundMethod("org.jruby.RubyMath","asinh","asinh");
        runtime.addBoundMethod("org.jruby.RubyMath","erfc","erfc");
        runtime.addBoundMethod("org.jruby.RubyMath","tan","tan");
        runtime.addBoundMethod("org.jruby.RubyMath","acos","acos");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$atan19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "atan19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atan19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atan", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atan", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$asin19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "asin19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "asin19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("asin", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("asin", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$cos19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "cos19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "cos19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cos", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("cos", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$acosh19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "acosh19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "acosh19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("acosh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("acosh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$erf19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "erf19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "erf19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("erf", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("erf", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$atanh_19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "atanh_19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atanh_19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atanh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atanh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$tanh19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "tanh19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "tanh19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("tanh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("tanh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$atan219(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "atan219", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "atan219", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("atan2", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("atan2", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$gamma(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "gamma", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "gamma", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("gamma", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("gamma", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$hypot19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "hypot19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "hypot19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("hypot", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("hypot", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$acos19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "acos19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "acos19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("acos", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("acos", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$erfc19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "erfc19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "erfc19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("erfc", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("erfc", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$lgamma(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "lgamma", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "lgamma", org.jruby.RubyArray.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("lgamma", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("lgamma", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$cosh19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "cosh19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "cosh19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cosh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("cosh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$2$0$ldexp19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 2, "ldexp19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "ldexp19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("ldexp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("ldexp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$frexp19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "frexp19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "frexp19", org.jruby.RubyArray.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("frexp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("frexp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sqrt19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sqrt19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sqrt19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sqrt", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sqrt", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sinh19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sinh19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sinh19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sinh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sinh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$log2_19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "log2_19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log2_19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("log2", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log2", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$0$1$log_19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "log_19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log_19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("log", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$log10_19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "log10_19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "log10_19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("log10", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("log10", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$exp19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "exp19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "exp19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("exp", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("exp", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$asinh19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "asinh19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "asinh19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("asinh", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("asinh", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$sin19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "sin19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "sin19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sin", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("sin", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$cbrt(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "cbrt", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "cbrt", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cbrt", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("cbrt", moduleMethod);
        javaMethod = new org.jruby.RubyMath$INVOKER$s$1$0$tan19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "tan19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyMath.class, "tan19", org.jruby.RubyFloat.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("tan", javaMethod);
        moduleMethod = populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("tan", moduleMethod);
        runtime.addBoundMethod("org.jruby.RubyMath","atan19","atan");
        runtime.addBoundMethod("org.jruby.RubyMath","asin19","asin");
        runtime.addBoundMethod("org.jruby.RubyMath","cos19","cos");
        runtime.addBoundMethod("org.jruby.RubyMath","acosh19","acosh");
        runtime.addBoundMethod("org.jruby.RubyMath","erf19","erf");
        runtime.addBoundMethod("org.jruby.RubyMath","atanh_19","atanh");
        runtime.addBoundMethod("org.jruby.RubyMath","tanh19","tanh");
        runtime.addBoundMethod("org.jruby.RubyMath","atan219","atan2");
        runtime.addBoundMethod("org.jruby.RubyMath","gamma","gamma");
        runtime.addBoundMethod("org.jruby.RubyMath","hypot19","hypot");
        runtime.addBoundMethod("org.jruby.RubyMath","acos19","acos");
        runtime.addBoundMethod("org.jruby.RubyMath","erfc19","erfc");
        runtime.addBoundMethod("org.jruby.RubyMath","lgamma","lgamma");
        runtime.addBoundMethod("org.jruby.RubyMath","cosh19","cosh");
        runtime.addBoundMethod("org.jruby.RubyMath","ldexp19","ldexp");
        runtime.addBoundMethod("org.jruby.RubyMath","frexp19","frexp");
        runtime.addBoundMethod("org.jruby.RubyMath","sqrt19","sqrt");
        runtime.addBoundMethod("org.jruby.RubyMath","sinh19","sinh");
        runtime.addBoundMethod("org.jruby.RubyMath","log2_19","log2");
        runtime.addBoundMethod("org.jruby.RubyMath","log_19","log");
        runtime.addBoundMethod("org.jruby.RubyMath","log10_19","log10");
        runtime.addBoundMethod("org.jruby.RubyMath","exp19","exp");
        runtime.addBoundMethod("org.jruby.RubyMath","asinh19","asinh");
        runtime.addBoundMethod("org.jruby.RubyMath","sin19","sin");
        runtime.addBoundMethod("org.jruby.RubyMath","cbrt","cbrt");
        runtime.addBoundMethod("org.jruby.RubyMath","tan19","tan");
        }
    }
    static {
     }
}
