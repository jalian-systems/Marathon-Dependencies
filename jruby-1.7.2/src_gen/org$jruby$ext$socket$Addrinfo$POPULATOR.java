/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$socket$Addrinfo$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$s$2$0$udp(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 2, "udp", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "udp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("udp", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$s$0$0$getaddrinfo(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "getaddrinfo", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "getaddrinfo", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class});
        singletonClass.addMethodAtBootTimeOnly("getaddrinfo", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$s$1$0$ip(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "ip", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ip", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("ip", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$s$0$0$unix(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "unix", true, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "unix", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class});
        singletonClass.addMethodAtBootTimeOnly("unix", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$s$2$0$tcp(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 2, "tcp", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "tcp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("tcp", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","udp","udp");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","getaddrinfo","getaddrinfo");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ip","ip");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","unix","unix");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","tcp","tcp");
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_linklocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_linklocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_linklocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_linklocal?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$initialize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$getnameinfo(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "getnameinfo", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "getnameinfo", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("getnameinfo", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$afamily(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "afamily", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "afamily", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("afamily", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_sitelocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_sitelocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_sitelocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_sitelocal?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_unspecified_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_unspecified_p", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ipv6_unspecified_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_unspecified?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$protocol(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "protocol", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "protocol", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("protocol", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$1$0$marshal_load(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "marshal_load", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "marshal_load", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("marshal_load", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ip_unpack(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ip_unpack", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ip_unpack", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ip_unpack", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_v4compat_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_v4compat_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_v4compat_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_v4compat?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv4_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv4_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv4_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv4?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_loopback_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_loopback_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_loopback_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_loopback?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$marshal_dump(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "marshal_dump", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "marshal_dump", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("marshal_dump", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_mc_nodelocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_mc_nodelocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_mc_nodelocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_mc_nodelocal?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_to_ipv4(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_to_ipv4", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ipv6_to_ipv4", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_to_ipv4", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$inspect_sockaddr(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect_sockaddr", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "inspect_sockaddr", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("inspect_sockaddr", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$canonname(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "canonname", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "canonname", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("canonname", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv4_loopback_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv4_loopback_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv4_loopback_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv4_loopback?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$inspect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "inspect", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("inspect", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_mc_sitelocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_mc_sitelocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_mc_sitelocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_mc_sitelocal?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ip_address(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ip_address", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ip_address", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ip_address", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$socktype(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "socktype", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "socktype", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("socktype", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_mc_global_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_mc_global_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_mc_global_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_mc_global?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ip_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ip_p", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ip_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ip?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_multicast_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_multicast_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_multicast_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_multicast?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv4_private_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv4_private_p", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ipv4_private_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv4_private?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_mc_orglocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_mc_orglocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_mc_orglocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_mc_orglocal?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$pfamily(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "pfamily", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "pfamily", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("pfamily", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ip_port(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ip_port", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ip_port", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ip_port", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_v4mapped_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_v4mapped_p", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "ipv6_v4mapped_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_v4mapped?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$unix_path(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "unix_path", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "unix_path", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("unix_path", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$unix_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "unix_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "unix_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("unix?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv4_multicast_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv4_multicast_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv4_multicast_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv4_multicast?", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$to_sockaddr(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_sockaddr", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.Addrinfo.class, "to_sockaddr", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_sockaddr", javaMethod);
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.ext.socket.Addrinfo$INVOKER$i$0$0$ipv6_mc_linklocal_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ipv6_mc_linklocal_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.Addrinfo.class, "ipv6_mc_linklocal_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ipv6_mc_linklocal?", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_linklocal_p","ipv6_linklocal?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","getnameinfo","getnameinfo");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","afamily","afamily");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_sitelocal_p","ipv6_sitelocal?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_unspecified_p","ipv6_unspecified?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_p","ipv6?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","protocol","protocol");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","marshal_load","marshal_load");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ip_unpack","ip_unpack");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_v4compat_p","ipv6_v4compat?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv4_p","ipv4?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_loopback_p","ipv6_loopback?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","marshal_dump","marshal_dump");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_mc_nodelocal_p","ipv6_mc_nodelocal?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_to_ipv4","ipv6_to_ipv4");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","inspect_sockaddr","inspect_sockaddr");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","canonname","canonname");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv4_loopback_p","ipv4_loopback?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","inspect","inspect");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_mc_sitelocal_p","ipv6_mc_sitelocal?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ip_address","ip_address");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","socktype","socktype");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_mc_global_p","ipv6_mc_global?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ip_p","ip?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_multicast_p","ipv6_multicast?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv4_private_p","ipv4_private?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_mc_orglocal_p","ipv6_mc_orglocal?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","pfamily","pfamily");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ip_port","ip_port");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_v4mapped_p","ipv6_v4mapped?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","unix_path","unix_path");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","unix_p","unix?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv4_multicast_p","ipv4_multicast?");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","to_sockaddr","to_sockaddr");
        runtime.addBoundMethod("org.jruby.ext.socket.Addrinfo","ipv6_mc_linklocal_p","ipv6_mc_linklocal?");
    }
    static {
     }
}
