/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$RubySymbol$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.RubySymbol$INVOKER$s$0$0$all_symbols(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "all_symbols", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "all_symbols", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("all_symbols", javaMethod);
        runtime.addBoundMethod("org.jruby.RubySymbol","all_symbols","all_symbols");
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_sym(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_sym", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_sym", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_sym", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$1$0$op_eqq(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_eqq", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "op_eqq", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("===", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$id2name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "id2name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "id2name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("id2name", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_proc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_proc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_proc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_proc", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$hash(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "hash", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "hash", org.jruby.RubyFixnum.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("hash", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_s(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_s", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_s", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        runtime.addBoundMethod("org.jruby.RubySymbol","to_sym","to_sym");
        runtime.addBoundMethod("org.jruby.RubySymbol","op_eqq","===");
        runtime.addBoundMethod("org.jruby.RubySymbol","id2name","id2name");
        runtime.addBoundMethod("org.jruby.RubySymbol","to_proc","to_proc");
        runtime.addBoundMethod("org.jruby.RubySymbol","hash","hash");
        runtime.addBoundMethod("org.jruby.RubySymbol","to_s","to_s");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_int(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_int", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_int", org.jruby.RubyFixnum.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_int", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_i(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_i", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_i", org.jruby.RubyFixnum.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_i", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$inspect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "inspect", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("inspect", javaMethod);
        runtime.addBoundMethod("org.jruby.RubySymbol","to_int","to_int");
        runtime.addBoundMethod("org.jruby.RubySymbol","to_i","to_i");
        runtime.addBoundMethod("org.jruby.RubySymbol","inspect","inspect");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$succ(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "succ", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "succ", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("succ", javaMethod);
        cls.addMethodAtBootTimeOnly("next", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$op_aref(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "op_aref", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "op_aref", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("[]", javaMethod);
        cls.addMethodAtBootTimeOnly("slice", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$empty_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "empty_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "empty_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("empty?", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$capitalize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "capitalize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "capitalize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("capitalize", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$1$0$casecmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "casecmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "casecmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("casecmp", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$1$0$op_cmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_cmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "op_cmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<=>", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$1$0$op_match19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_match19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "op_match19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("=~", javaMethod);
        cls.addMethodAtBootTimeOnly("match", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$upcase(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "upcase", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "upcase", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("upcase", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$swapcase(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "swapcase", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "swapcase", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("swapcase", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$encoding(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "encoding", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "encoding", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("encoding", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$to_sym19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_sym19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "to_sym19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("intern", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$length(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "length", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "length", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("length", javaMethod);
        cls.addMethodAtBootTimeOnly("size", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$inspect19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "inspect19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("inspect", javaMethod);
        javaMethod = new org.jruby.RubySymbol$INVOKER$i$0$0$downcase(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "downcase", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubySymbol.class, "downcase", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("downcase", javaMethod);
        runtime.addBoundMethod("org.jruby.RubySymbol","succ","succ");
        runtime.addBoundMethod("org.jruby.RubySymbol","op_aref","[]");
        runtime.addBoundMethod("org.jruby.RubySymbol","empty_p","empty?");
        runtime.addBoundMethod("org.jruby.RubySymbol","capitalize","capitalize");
        runtime.addBoundMethod("org.jruby.RubySymbol","casecmp","casecmp");
        runtime.addBoundMethod("org.jruby.RubySymbol","op_cmp","<=>");
        runtime.addBoundMethod("org.jruby.RubySymbol","op_match19","=~");
        runtime.addBoundMethod("org.jruby.RubySymbol","upcase","upcase");
        runtime.addBoundMethod("org.jruby.RubySymbol","swapcase","swapcase");
        runtime.addBoundMethod("org.jruby.RubySymbol","encoding","encoding");
        runtime.addBoundMethod("org.jruby.RubySymbol","to_sym19","intern");
        runtime.addBoundMethod("org.jruby.RubySymbol","length","length");
        runtime.addBoundMethod("org.jruby.RubySymbol","inspect19","inspect");
        runtime.addBoundMethod("org.jruby.RubySymbol","downcase","downcase");
        }
    }
    static {
     }
}
