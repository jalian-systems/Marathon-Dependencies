/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$socket$RubyBasicSocket$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$s$1$0$set_do_not_reverse_lookup(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_do_not_reverse_lookup", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "set_do_not_reverse_lookup", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("do_not_reverse_lookup=", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$s$0$0$do_not_reverse_lookup(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "do_not_reverse_lookup", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "do_not_reverse_lookup", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("do_not_reverse_lookup", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","set_do_not_reverse_lookup","do_not_reverse_lookup=");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","do_not_reverse_lookup","do_not_reverse_lookup");
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$getsockname(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getsockname", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "getsockname", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("getsockname", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$getpeername(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getpeername", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "getpeername", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("getpeername", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$send(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "send", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "send", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("send", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$close_read(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close_read", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "close_read", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("close_read", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$1$shutdown(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "shutdown", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "shutdown", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("shutdown", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$recv(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "recv", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "recv", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("recv", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$2$0$getsockopt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 2, "getsockopt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "getsockopt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("getsockopt", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$3$0$setsockopt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 3, "setsockopt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "setsockopt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("setsockopt", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$close_write(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close_write", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "close_write", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("close_write", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$recv_nonblock(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "recv_nonblock", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "recv_nonblock", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("recv_nonblock", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","getsockname","getsockname");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","getpeername","getpeername");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","send","send");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","close_read","close_read");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","shutdown","shutdown");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","recv","recv");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","getsockopt","getsockopt");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","setsockopt","setsockopt");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","close_write","close_write");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","recv_nonblock","recv_nonblock");
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$1$0$set_do_not_reverse_lookup19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_do_not_reverse_lookup19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "set_do_not_reverse_lookup19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("do_not_reverse_lookup=", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$do_not_reverse_lookup19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "do_not_reverse_lookup19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "do_not_reverse_lookup19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("do_not_reverse_lookup", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$remote_address(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "remote_address", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "remote_address", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("remote_address", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$sendmsg_nonblock(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "sendmsg_nonblock", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.RubyBasicSocket.class, "sendmsg_nonblock", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("sendmsg_nonblock", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$getpeereid(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getpeereid", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.RubyBasicSocket.class, "getpeereid", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("getpeereid", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$readmsg(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readmsg", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.RubyBasicSocket.class, "readmsg", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readmsg", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$local_address(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "local_address", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.socket.RubyBasicSocket.class, "local_address", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("local_address", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$sendmsg(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "sendmsg", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.RubyBasicSocket.class, "sendmsg", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("sendmsg", javaMethod);
        javaMethod = new org.jruby.ext.socket.RubyBasicSocket$INVOKER$i$0$0$readmsg_nonblock(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readmsg_nonblock", false, CallConfiguration.FrameNoneScopeNone, true, org.jruby.ext.socket.RubyBasicSocket.class, "readmsg_nonblock", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readmsg_nonblock", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","set_do_not_reverse_lookup19","do_not_reverse_lookup=");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","do_not_reverse_lookup19","do_not_reverse_lookup");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","remote_address","remote_address");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","sendmsg_nonblock","sendmsg_nonblock");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","getpeereid","getpeereid");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","readmsg","readmsg");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","local_address","local_address");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","sendmsg","sendmsg");
        runtime.addBoundMethod("org.jruby.ext.socket.RubyBasicSocket","readmsg_nonblock","readmsg_nonblock");
        }
    }
    static {
     }
}
