/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$zlib$ZStream$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$initialize(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 0, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$total_in(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "total_in", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "total_in", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("total_in", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$finished_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "finished_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "finished_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("finished?", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$avail_out(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "avail_out", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "avail_out", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("avail_out", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$adler(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "adler", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "adler", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("adler", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$close(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "close", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("close", javaMethod);
        cls.addMethodAtBootTimeOnly("end", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$flush_next_out(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "flush_next_out", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "flush_next_out", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("flush_next_out", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$finish(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "finish", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "finish", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("finish", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$flush_next_in(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "flush_next_in", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "flush_next_in", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("flush_next_in", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$stream_end_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "stream_end_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "stream_end_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("stream_end?", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$data_type(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "data_type", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "data_type", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("data_type", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$closed_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "closed_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "closed_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("closed?", javaMethod);
        cls.addMethodAtBootTimeOnly("ended?", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$1$0$set_avail_out(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_avail_out", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "set_avail_out", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("avail_out=", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$reset(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "reset", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "reset", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("reset", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$total_out(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "total_out", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "total_out", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("total_out", javaMethod);
        javaMethod = new org.jruby.ext.zlib.ZStream$INVOKER$i$0$0$avail_in(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "avail_in", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.ZStream.class, "avail_in", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("avail_in", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","total_in","total_in");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","finished_p","finished?");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","avail_out","avail_out");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","adler","adler");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","close","close");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","flush_next_out","flush_next_out");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","finish","finish");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","flush_next_in","flush_next_in");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","stream_end_p","stream_end?");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","data_type","data_type");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","closed_p","closed?");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","set_avail_out","avail_out=");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","reset","reset");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","total_out","total_out");
        runtime.addBoundMethod("org.jruby.ext.zlib.ZStream","avail_in","avail_in");
    }
    static {
     }
}
