/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$openssl$PKCS7$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$decrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "decrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "decrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("decrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$detached_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "detached_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "detached_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("detached?", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$verify(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "verify", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "verify", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("verify", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$set_certificates(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_certificates", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "set_certificates", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("certificates=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$set_type(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_type", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "set_type", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("type=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$certificates(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "certificates", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "certificates", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("certificates", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$set_detached(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_detached", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "set_detached", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("detached=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$detached(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "detached", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "detached", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("detached", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$to_pem(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_pem", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "to_pem", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_pem", javaMethod);
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$recipients(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "recipients", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "recipients", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("recipients", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$get_type(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_type", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "get_type", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("type", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$add_data(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "add_data", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "add_data", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("add_data", javaMethod);
        cls.addMethodAtBootTimeOnly("data=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$crls(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "crls", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "crls", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("crls", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$set_cipher(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_cipher", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "set_cipher", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("cipher=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$initialize_copy(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "initialize_copy", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "initialize_copy", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize_copy", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$add_signer(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "add_signer", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "add_signer", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("add_signer", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$signers(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "signers", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "signers", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("signers", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$set_crls(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_crls", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "set_crls", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("crls=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$add_crl(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "add_crl", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "add_crl", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("add_crl", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$add_certificate(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "add_certificate", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "add_certificate", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("add_certificate", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$to_der(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_der", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "to_der", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_der", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$0$0$_initialize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "_initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "_initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKCS7$INVOKER$i$1$0$add_recipient(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "add_recipient", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKCS7.class, "add_recipient", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("add_recipient", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","decrypt","decrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","detached_p","detached?");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","verify","verify");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","set_certificates","certificates=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","set_type","type=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","certificates","certificates");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","set_detached","detached=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","detached","detached");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","to_pem","to_pem");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","recipients","recipients");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","get_type","type");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","add_data","add_data");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","crls","crls");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","set_cipher","cipher=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","initialize_copy","initialize_copy");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","add_signer","add_signer");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","signers","signers");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","set_crls","crls=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","add_crl","add_crl");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","add_certificate","add_certificate");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","to_der","to_der");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","_initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKCS7","add_recipient","add_recipient");
    }
    static {
     }
}
