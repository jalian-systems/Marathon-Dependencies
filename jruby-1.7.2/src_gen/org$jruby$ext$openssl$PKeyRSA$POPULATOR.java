/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$openssl$PKeyRSA$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$s$0$0$generate(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "generate", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "generate", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class});
        singletonClass.addMethodAtBootTimeOnly("generate", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","generate","generate");
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$initialize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "initialize", false, CallConfiguration.FrameFullScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_d(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_d", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_d", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("d=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_iqmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_iqmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_iqmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("iqmp", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$to_text(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_text", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "to_text", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_text", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("p=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_dmq1(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_dmq1", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_dmq1", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("dmq1", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_n(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_n", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_n", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("n=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$private_encrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "private_encrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "private_encrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("private_encrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$public_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "public_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "public_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("public?", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$private_decrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "private_decrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "private_decrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("private_decrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$public_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "public_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "public_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("public_key", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_iqmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_iqmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_iqmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("iqmp=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$export(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "export", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "export", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("export", javaMethod);
        cls.addMethodAtBootTimeOnly("to_pem", javaMethod);
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_d(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_d", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_d", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("d", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_e(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_e", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_e", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("e", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_e(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_e", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_e", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("e=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_n(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_n", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_n", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("n", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_q(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_q", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_q", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("q=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$public_encrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "public_encrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "public_encrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("public_encrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_dmp1(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_dmp1", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_dmp1", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("dmp1", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_dmq1(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_dmq1", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_dmq1", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("dmq1=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$params(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "params", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "params", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("params", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$1$0$set_dmp1(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_dmp1", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "set_dmp1", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("dmp1=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_q(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_q", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_q", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("q", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$get_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "get_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("p", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$to_der(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_der", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "to_der", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_der", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$public_decrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "public_decrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "public_decrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("public_decrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyRSA$INVOKER$i$0$0$private_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "private_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyRSA.class, "private_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("private?", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_d","d=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_iqmp","iqmp");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","to_text","to_text");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_p","p=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_dmq1","dmq1");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_n","n=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","private_encrypt","private_encrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","public_p","public?");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","private_decrypt","private_decrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","public_key","public_key");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_iqmp","iqmp=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","export","export");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_d","d");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_e","e");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_e","e=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_n","n");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_q","q=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","public_encrypt","public_encrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_dmp1","dmp1");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_dmq1","dmq1=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","params","params");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","set_dmp1","dmp1=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_q","q");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","get_p","p");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","to_der","to_der");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","public_decrypt","public_decrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyRSA","private_p","private?");
    }
    static {
     }
}
