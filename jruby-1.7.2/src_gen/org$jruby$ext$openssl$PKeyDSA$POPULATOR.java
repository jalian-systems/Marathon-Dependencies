/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$openssl$PKeyDSA$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$s$1$0$generate(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "generate", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "generate", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("generate", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","generate","generate");
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$get_g(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_g", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "get_g", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("g", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$initialize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$export(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "export", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "export", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("export", javaMethod);
        cls.addMethodAtBootTimeOnly("to_pem", javaMethod);
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$1$0$set_g(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_g", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "set_g", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("g=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$to_text(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_text", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "to_text", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_text", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$1$0$set_q(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_q", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "set_q", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("q=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$1$0$syssign(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "syssign", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "syssign", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("syssign", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$1$0$set_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "set_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("p=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$1$0$set_pub_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_pub_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "set_pub_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("pub_key=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$public_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "public_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "public_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("public?", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$2$0$sysverify(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 2, "sysverify", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "sysverify", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sysverify", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$get_q(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_q", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "get_q", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("q", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$get_priv_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_priv_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "get_priv_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("priv_key", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$get_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "get_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("p", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$public_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "public_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "public_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("public_key", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$to_der(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_der", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "to_der", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("to_der", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$get_pub_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_pub_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "get_pub_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("pub_key", javaMethod);
        javaMethod = new org.jruby.ext.openssl.PKeyDSA$INVOKER$i$0$0$private_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "private_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.PKeyDSA.class, "private_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("private?", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","get_g","g");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","export","export");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","set_g","g=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","to_text","to_text");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","set_q","q=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","syssign","syssign");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","set_p","p=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","set_pub_key","pub_key=");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","public_p","public?");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","sysverify","sysverify");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","get_q","q");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","get_priv_key","priv_key");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","get_p","p");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","public_key","public_key");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","to_der","to_der");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","get_pub_key","pub_key");
        runtime.addBoundMethod("org.jruby.ext.openssl.PKeyDSA","private_p","private?");
    }
    static {
     }
}
