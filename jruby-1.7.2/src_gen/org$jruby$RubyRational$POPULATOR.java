/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$RubyRational$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.RubyRational$INVOKER$s$convert(singletonClass, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "convert", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "convert", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("convert", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyRational","convert","convert");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyRational$INVOKER$s$newInstanceBang(singletonClass, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "newInstanceBang", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "newInstanceBang", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("new!", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyRational","newInstanceBang","new!");
        }
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$to_f(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_f", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "to_f", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_f", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$to_i(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_i", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "to_i", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_i", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$op_ceil(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "op_ceil", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_ceil", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("ceil", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$op_round(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "op_round", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_round", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("round", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$to_r(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_r", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "to_r", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_r", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_cmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_cmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_cmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<=>", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$to_s(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "to_s", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "to_s", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$marshal_load(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "marshal_load", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "marshal_load", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("marshal_load", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_rem(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_rem", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_rem", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("remainder", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$op_abs(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "op_abs", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_abs", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("abs", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_equal(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_equal", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_equal", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("==", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_expt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_expt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_expt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("**", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_fdiv(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_fdiv", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_fdiv", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("fdiv", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_coerce(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_coerce", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_coerce", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("coerce", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$hash(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "hash", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "hash", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("hash", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_mul(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_mul", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_mul", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("*", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_add(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_add", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_add", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("+", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$denominator(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "denominator", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "denominator", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("denominator", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$numerator(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "numerator", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "numerator", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("numerator", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_div(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_div", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_div", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("/", javaMethod);
        cls.addMethodAtBootTimeOnly("quo", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_sub(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_sub", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_sub", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("-", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$op_floor(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "op_floor", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_floor", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("floor", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$op_truncate(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "op_truncate", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_truncate", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("truncate", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$marshal_dump(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "marshal_dump", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "marshal_dump", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("marshal_dump", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$0$inspect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "inspect", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("inspect", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyRational","to_f","to_f");
        runtime.addBoundMethod("org.jruby.RubyRational","to_i","to_i");
        runtime.addBoundMethod("org.jruby.RubyRational","op_ceil","ceil");
        runtime.addBoundMethod("org.jruby.RubyRational","op_round","round");
        runtime.addBoundMethod("org.jruby.RubyRational","to_r","to_r");
        runtime.addBoundMethod("org.jruby.RubyRational","op_cmp","<=>");
        runtime.addBoundMethod("org.jruby.RubyRational","to_s","to_s");
        runtime.addBoundMethod("org.jruby.RubyRational","marshal_load","marshal_load");
        runtime.addBoundMethod("org.jruby.RubyRational","op_rem","remainder");
        runtime.addBoundMethod("org.jruby.RubyRational","op_abs","abs");
        runtime.addBoundMethod("org.jruby.RubyRational","op_equal","==");
        runtime.addBoundMethod("org.jruby.RubyRational","op_expt","**");
        runtime.addBoundMethod("org.jruby.RubyRational","op_fdiv","fdiv");
        runtime.addBoundMethod("org.jruby.RubyRational","op_coerce","coerce");
        runtime.addBoundMethod("org.jruby.RubyRational","hash","hash");
        runtime.addBoundMethod("org.jruby.RubyRational","op_mul","*");
        runtime.addBoundMethod("org.jruby.RubyRational","op_add","+");
        runtime.addBoundMethod("org.jruby.RubyRational","denominator","denominator");
        runtime.addBoundMethod("org.jruby.RubyRational","numerator","numerator");
        runtime.addBoundMethod("org.jruby.RubyRational","op_div","/");
        runtime.addBoundMethod("org.jruby.RubyRational","op_sub","-");
        runtime.addBoundMethod("org.jruby.RubyRational","op_floor","floor");
        runtime.addBoundMethod("org.jruby.RubyRational","op_truncate","truncate");
        runtime.addBoundMethod("org.jruby.RubyRational","marshal_dump","marshal_dump");
        runtime.addBoundMethod("org.jruby.RubyRational","inspect","inspect");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_divmod(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_divmod", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_divmod", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("divmod", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_idiv(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_idiv", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_idiv", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("div", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_mod(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_mod", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_mod", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("modulo", javaMethod);
        cls.addMethodAtBootTimeOnly("%", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyRational","op_divmod","divmod");
        runtime.addBoundMethod("org.jruby.RubyRational","op_idiv","div");
        runtime.addBoundMethod("org.jruby.RubyRational","op_mod","modulo");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyRational$INVOKER$i$0$1$rationalize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "rationalize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "rationalize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("rationalize", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_divmod19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_divmod19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_divmod19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("divmod", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_idiv19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_idiv19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_idiv19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("div", javaMethod);
        javaMethod = new org.jruby.RubyRational$INVOKER$i$1$0$op_mod19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_mod19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyRational.class, "op_mod19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("modulo", javaMethod);
        cls.addMethodAtBootTimeOnly("%", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyRational","rationalize","rationalize");
        runtime.addBoundMethod("org.jruby.RubyRational","op_divmod19","divmod");
        runtime.addBoundMethod("org.jruby.RubyRational","op_idiv19","div");
        runtime.addBoundMethod("org.jruby.RubyRational","op_mod19","modulo");
        }
    }
    static {
     }
}
