/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$javasupport$JavaClass$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$s$1$0$for_name(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "for_name", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "for_name", org.jruby.javasupport.JavaClass.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        singletonClass.addMethodAtBootTimeOnly("for_name", javaMethod);
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","for_name","for_name");
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$protected_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "protected_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "protected_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("protected?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$modifiers(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "modifiers", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "modifiers", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("modifiers", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_classes(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_classes", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_classes", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_classes", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$get_package(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "get_package", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "get_package", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("package", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$resource_as_string(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "resource_as_string", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "resource_as_string", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("resource_as_string", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$annotations(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "annotations", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "annotations", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("annotations", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$java_method(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "java_method", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "java_method", org.jruby.javasupport.JavaMethod.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("java_method", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_method(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "declared_method", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_method", org.jruby.javasupport.JavaMethod.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("declared_method", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$simple_name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "simple_name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "simple_name", org.jruby.RubyString.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("simple_name", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$op_cmp(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "op_cmp", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "op_cmp", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<=>", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$enum_constants(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enum_constants", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "enum_constants", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("enum_constants", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_method_smart(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "declared_method_smart", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_method_smart", org.jruby.javasupport.JavaCallable.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("declared_method_smart", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$enclosing_class(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enclosing_class", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "enclosing_class", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("enclosing_class", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_constructors(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_constructors", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_constructors", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_constructors", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$canonical_name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "canonical_name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "canonical_name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("canonical_name", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$assignable_from_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "assignable_from_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "assignable_from_p", org.jruby.RubyBoolean.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("assignable_from?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declaring_class(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declaring_class", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declaring_class", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declaring_class", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$classes(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "classes", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "classes", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("classes", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$inspect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "inspect", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "inspect", org.jruby.RubyString.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("inspect", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$extend_proxy(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "extend_proxy", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "extend_proxy", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("extend_proxy", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$type_parameters(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "type_parameters", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "type_parameters", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("type_parameters", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_annotations(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_annotations", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_annotations", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_annotations", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$annotation_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "annotation_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "annotation_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("annotation?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$enclosing_method(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enclosing_method", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "enclosing_method", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("enclosing_method", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$ruby_class(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "ruby_class", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "ruby_class", org.jruby.RubyModule.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("ruby_class", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$interfaces(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "interfaces", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "interfaces", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("interfaces", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$primitive_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "primitive_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "primitive_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("primitive?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$resource_as_stream(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "resource_as_stream", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "resource_as_stream", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("resource_as_stream", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$annotation_present_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "annotation_present_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "annotation_present_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("annotation_present?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$fields(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "fields", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "fields", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("fields", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$private_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "private_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "private_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("private?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$component_type(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "component_type", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "component_type", org.jruby.javasupport.JavaClass.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("component_type", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_constructor(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "declared_constructor", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_constructor", org.jruby.javasupport.JavaConstructor.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("declared_constructor", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$synthetic_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "synthetic_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "synthetic_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("synthetic?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$local_class_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "local_class_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "local_class_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("local_class?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$array_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "array_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "array_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("array?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$annotation(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "annotation", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "annotation", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("annotation", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$class_loader(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "class_loader", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "class_loader", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("class_loader", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$java_class_methods(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "java_class_methods", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "java_class_methods", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("java_class_methods", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$protection_domain(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "protection_domain", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "protection_domain", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("protection_domain", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$annotations_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "annotations_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "annotations_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("annotations?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$public_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "public_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "public_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("public?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$field(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "field", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "field", org.jruby.javasupport.JavaField.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("field", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_class_methods(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_class_methods", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_class_methods", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_class_methods", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$signers(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "signers", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "signers", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("signers", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_instance_methods(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_instance_methods", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_instance_methods", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_instance_methods", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "name", org.jruby.RubyString.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("name", javaMethod);
        cls.addMethodAtBootTimeOnly("to_s", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$generic_superclass(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "generic_superclass", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "generic_superclass", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("generic_superclass", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$constructors(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "constructors", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "constructors", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("constructors", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$interface_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "interface_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "interface_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("interface?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$resource(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "resource", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "resource", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("resource", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$new_array(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "new_array", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "new_array", org.jruby.javasupport.JavaObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("new_array", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$superclass(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "superclass", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "superclass", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("superclass", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$1$0$declared_field(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "declared_field", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_field", org.jruby.javasupport.JavaField.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("declared_field", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_fields(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_fields", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_fields", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_fields", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$enum_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enum_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "enum_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("enum?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$anonymous_class_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "anonymous_class_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "anonymous_class_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("anonymous_class?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$declared_annotations_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "declared_annotations_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "declared_annotations_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("declared_annotations?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$enclosing_constructor(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enclosing_constructor", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "enclosing_constructor", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("enclosing_constructor", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$constructor(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "constructor", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "constructor", org.jruby.javasupport.JavaConstructor.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("constructor", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$generic_interfaces(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "generic_interfaces", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "generic_interfaces", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("generic_interfaces", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$java_instance_methods(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "java_instance_methods", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "java_instance_methods", org.jruby.RubyArray.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("java_instance_methods", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$final_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "final_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "final_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("final?", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$array_class(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "array_class", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "array_class", org.jruby.javasupport.JavaClass.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("array_class", javaMethod);
        javaMethod = new org.jruby.javasupport.JavaClass$INVOKER$i$0$0$member_class_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "member_class_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.javasupport.JavaClass.class, "member_class_p", org.jruby.RubyBoolean.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("member_class?", javaMethod);
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","protected_p","protected?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","modifiers","modifiers");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_classes","declared_classes");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","get_package","package");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","resource_as_string","resource_as_string");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","annotations","annotations");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","java_method","java_method");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_method","declared_method");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","simple_name","simple_name");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","op_cmp","<=>");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","enum_constants","enum_constants");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_method_smart","declared_method_smart");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","enclosing_class","enclosing_class");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_constructors","declared_constructors");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","canonical_name","canonical_name");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","assignable_from_p","assignable_from?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declaring_class","declaring_class");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","classes","classes");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","inspect","inspect");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","extend_proxy","extend_proxy");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","type_parameters","type_parameters");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_annotations","declared_annotations");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","annotation_p","annotation?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","enclosing_method","enclosing_method");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","ruby_class","ruby_class");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","interfaces","interfaces");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","primitive_p","primitive?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","resource_as_stream","resource_as_stream");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","annotation_present_p","annotation_present?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","fields","fields");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","private_p","private?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","component_type","component_type");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_constructor","declared_constructor");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","synthetic_p","synthetic?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","local_class_p","local_class?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","array_p","array?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","annotation","annotation");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","class_loader","class_loader");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","java_class_methods","java_class_methods");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","protection_domain","protection_domain");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","annotations_p","annotations?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","public_p","public?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","field","field");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_class_methods","declared_class_methods");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","signers","signers");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_instance_methods","declared_instance_methods");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","name","name");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","generic_superclass","generic_superclass");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","constructors","constructors");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","interface_p","interface?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","resource","resource");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","new_array","new_array");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","superclass","superclass");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_field","declared_field");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_fields","declared_fields");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","enum_p","enum?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","anonymous_class_p","anonymous_class?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","declared_annotations_p","declared_annotations?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","enclosing_constructor","enclosing_constructor");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","constructor","constructor");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","generic_interfaces","generic_interfaces");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","java_instance_methods","java_instance_methods");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","final_p","final?");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","array_class","array_class");
        runtime.addBoundMethod("org.jruby.javasupport.JavaClass","member_class_p","member_class?");
    }
    static {
     }
}
