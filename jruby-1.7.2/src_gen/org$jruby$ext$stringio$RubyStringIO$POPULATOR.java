/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$stringio$RubyStringIO$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$s$0$2$open(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "open", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "open", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        singletonClass.addMethodAtBootTimeOnly("open", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","open","open");
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$set_sync(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_sync", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "set_sync", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("sync=", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$each_line(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each_line", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "each_line", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_line", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$set_lineno(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_lineno", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "set_lineno", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("lineno=", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$readlines(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readlines", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "readlines", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readlines", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$set_string(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_string", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "set_string", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("string=", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$close_write(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close_write", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "close_write", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("close_write", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$seek(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "seek", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "seek", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("seek", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$pos(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "pos", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "pos", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("pos", javaMethod);
        cls.addMethodAtBootTimeOnly("tell", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$chars(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "chars", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "chars", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("chars", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$close_read(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close_read", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "close_read", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("close_read", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$puts(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "puts", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "puts", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("puts", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$bytes(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "bytes", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "bytes", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("bytes", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$isatty(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "isatty", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "isatty", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("tty?", javaMethod);
        cls.addMethodAtBootTimeOnly("isatty", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$set_pos(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_pos", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "set_pos", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("pos=", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$fileno(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "fileno", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "fileno", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("fileno", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$lineno(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "lineno", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "lineno", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("lineno", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$truncate(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "truncate", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "truncate", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("truncate", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$closed_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "closed_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "closed_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("closed?", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$each_byte19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "each_byte19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "each_byte19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_byte", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$closed_write_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "closed_write_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "closed_write_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("closed_write?", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$each(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "each", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$2$reopen(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "reopen", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "reopen", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("reopen", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$2$initialize(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$readchar(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "readchar", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "readchar", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("readchar", javaMethod);
        cls.addMethodAtBootTimeOnly("readbyte", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$rewind(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "rewind", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "rewind", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("rewind", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$2$sysread(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "sysread", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "sysread", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("sysread", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$close(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "close", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("close", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$sync(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "sync", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "sync", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("sync", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$lines(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "lines", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "lines", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("lines", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$ungetc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "ungetc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "ungetc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("ungetc", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$length(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "length", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "length", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("length", javaMethod);
        cls.addMethodAtBootTimeOnly("size", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$binmode(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "binmode", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "binmode", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("binmode", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$write(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "write", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "write", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("write", javaMethod);
        cls.addMethodAtBootTimeOnly("syswrite", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$2$read(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "read", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "read", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("read", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$printf(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "printf", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "printf", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("printf", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$putc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "putc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "putc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("putc", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$readline(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readline", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "readline", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readline", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$closed_read_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "closed_read_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "closed_read_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("closed_read?", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$pid(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "pid", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "pid", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("pid", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$fcntl(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "fcntl", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "fcntl", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("fcntl", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$print(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "print", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "print", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("print", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$flush(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "flush", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "flush", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("flush", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$initialize_copy(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "initialize_copy", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "initialize_copy", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize_copy", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$getc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "getc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("getc", javaMethod);
        cls.addMethodAtBootTimeOnly("getbyte", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$fsync(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "fsync", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "fsync", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("fsync", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$each_char(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "each_char", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "each_char", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_char", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$append(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "append", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "append", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<<", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$string(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "string", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "string", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("string", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$eof(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "eof", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "eof", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("eof", javaMethod);
        cls.addMethodAtBootTimeOnly("eof?", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","set_sync","sync=");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","each_line","each_line");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","set_lineno","lineno=");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","readlines","readlines");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","set_string","string=");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","close_write","close_write");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","seek","seek");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","pos","pos");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","chars","chars");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","close_read","close_read");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","puts","puts");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","bytes","bytes");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","isatty","tty?");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","set_pos","pos=");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","fileno","fileno");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","lineno","lineno");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","truncate","truncate");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","closed_p","closed?");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","each_byte19","each_byte");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","closed_write_p","closed_write?");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","each","each");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","reopen","reopen");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","readchar","readchar");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","rewind","rewind");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","sysread","sysread");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","close","close");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","sync","sync");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","lines","lines");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","ungetc","ungetc");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","length","length");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","binmode","binmode");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","write","write");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","read","read");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","printf","printf");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","putc","putc");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","readline","readline");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","closed_read_p","closed_read?");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","pid","pid");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","fcntl","fcntl");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","print","print");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","flush","flush");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","initialize_copy","initialize_copy");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","getc","getc");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","fsync","fsync");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","each_char","each_char");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","append","<<");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","string","string");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","eof","eof");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$gets(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "gets", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "gets", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("gets", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$path(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "path", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "path", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("path", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","gets","gets");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","path","path");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$internal_encoding(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "internal_encoding", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "internal_encoding", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("internal_encoding", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$getc19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getc19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "getc19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("getc", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$external_encoding(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "external_encoding", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "external_encoding", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("external_encoding", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$set_encoding(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_encoding", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "set_encoding", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("set_encoding", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$1$0$ungetc19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "ungetc19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "ungetc19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("ungetc", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$readpartial(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readpartial", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "readpartial", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readpartial", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$2$gets19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "gets19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "gets19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("gets", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$readchar19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "readchar19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "readchar19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("readchar", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$1$read_nonblock(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "read_nonblock", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "read_nonblock", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("read_nonblock", javaMethod);
        javaMethod = new org.jruby.ext.stringio.RubyStringIO$INVOKER$i$0$0$print19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "print19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.stringio.RubyStringIO.class, "print19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("print", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","internal_encoding","internal_encoding");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","getc19","getc");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","external_encoding","external_encoding");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","set_encoding","set_encoding");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","ungetc19","ungetc");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","readpartial","readpartial");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","gets19","gets");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","readchar19","readchar");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","read_nonblock","read_nonblock");
        runtime.addBoundMethod("org.jruby.ext.stringio.RubyStringIO","print19","print");
        }
    }
    static {
        ASTInspector.addScopeAwareMethods("readline","gets","each");
     }
}
