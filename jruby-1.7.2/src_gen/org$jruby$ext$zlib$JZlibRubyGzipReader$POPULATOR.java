/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$zlib$JZlibRubyGzipReader$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        RubyClass singletonClass = cls.getSingletonClass();
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$s$0$0$newInstance(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "newInstance", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "newInstance", org.jruby.ext.zlib.JZlibRubyGzipReader.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        singletonClass.addMethodAtBootTimeOnly("new", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","newInstance","new");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$s$0$1$open18(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "open18", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "open18", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        singletonClass.addMethodAtBootTimeOnly("open", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","open18","open");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$s$0$1$open19(singletonClass, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "open19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "open19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        singletonClass.addMethodAtBootTimeOnly("open", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","open19","open");
        }
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$each_byte(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "each_byte", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "each_byte", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_byte", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$crc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "crc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "crc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("crc", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$rewind(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "rewind", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "rewind", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("rewind", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$readline(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "readline", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "readline", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class});
        cls.addMethodAtBootTimeOnly("readline", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$each_line(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each_line", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "each_line", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_line", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$1$0$set_lineno(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_lineno", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "set_lineno", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("lineno=", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$readchar(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "readchar", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "readchar", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("readchar", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$comment(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "comment", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "comment", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("comment", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$1$0$ungetc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "ungetc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "ungetc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("ungetc", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$pos(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "pos", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "pos", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("pos", javaMethod);
        cls.addMethodAtBootTimeOnly("tell", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$close(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "close", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "close", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("close", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$readlines(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readlines", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "readlines", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readlines", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$eof_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "eof_p", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "eof_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("eof?", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$each(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "each", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$os_code(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "os_code", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "os_code", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("os_code", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$orig_name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "orig_name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "orig_name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("orig_name", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$lineno(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "lineno", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "lineno", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("lineno", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$unused(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "unused", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "unused", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("unused", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$readpartial(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "readpartial", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "readpartial", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("readpartial", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$read(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "read", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "read", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("read", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$eof(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "eof", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "eof", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("eof", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","each_byte","each_byte");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","crc","crc");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","rewind","rewind");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","readline","readline");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","each_line","each_line");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","set_lineno","lineno=");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","readchar","readchar");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","comment","comment");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","ungetc","ungetc");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","pos","pos");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","close","close");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","readlines","readlines");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","eof_p","eof?");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","each","each");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","os_code","os_code");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","orig_name","orig_name");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","lineno","lineno");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","unused","unused");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","readpartial","readpartial");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","read","read");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","eof","eof");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$getc(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getc", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "getc", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("getc", javaMethod);
        cls.addMethodAtBootTimeOnly("getbyte", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$1$gets_18(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "gets_18", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "gets_18", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("gets", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$1$0$initialize(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, 1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","getc","getc");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","gets_18","gets");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","initialize","initialize");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$getbyte(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getbyte", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "getbyte", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("getbyte", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$getc_19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "getc_19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "getc_19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("getc", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$2$gets(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "gets", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "gets", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("gets", javaMethod);
        javaMethod = new org.jruby.ext.zlib.JZlibRubyGzipReader$INVOKER$i$0$0$initialize19(cls, Visibility.PRIVATE);
        populateMethod(javaMethod, -1, "initialize19", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.zlib.JZlibRubyGzipReader.class, "initialize19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","getbyte","getbyte");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","getc_19","getc");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","gets","gets");
        runtime.addBoundMethod("org.jruby.ext.zlib.JZlibRubyGzipReader","initialize19","initialize");
        }
    }
    static {
        ASTInspector.addScopeAwareMethods("readline","gets");
     }
}
