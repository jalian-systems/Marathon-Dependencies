/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$ext$openssl$Cipher$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$block_size(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "block_size", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "block_size", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("block_size", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$2$decrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "decrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "decrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("decrypt", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$_final(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "_final", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "_final", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("final", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$initialize(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "initialize", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "initialize", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$iv_len(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "iv_len", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "iv_len", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("iv_len", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$reset(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "reset", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "reset", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("reset", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$name(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "name", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "name", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("name", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$0$key_len(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "key_len", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "key_len", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {});
        cls.addMethodAtBootTimeOnly("key_len", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$set_key(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_key", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "set_key", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("key=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$update(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "update", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "update", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("update", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$set_padding(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_padding", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "set_padding", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("padding=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$set_key_len(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_key_len", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "set_key_len", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("key_len=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$set_iv(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "set_iv", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "set_iv", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("iv=", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$initialize_copy(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "initialize_copy", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "initialize_copy", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("initialize_copy", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$3$pkcs5_keyivgen(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "pkcs5_keyivgen", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "pkcs5_keyivgen", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("pkcs5_keyivgen", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$1$0$update_deprecated(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "update_deprecated", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "update_deprecated", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("<<", javaMethod);
        javaMethod = new org.jruby.ext.openssl.Cipher$INVOKER$i$0$2$encrypt(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "encrypt", false, CallConfiguration.FrameNoneScopeNone, false, org.jruby.ext.openssl.Cipher.class, "encrypt", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.builtin.IRubyObject[].class});
        cls.addMethodAtBootTimeOnly("encrypt", javaMethod);
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","block_size","block_size");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","decrypt","decrypt");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","_final","final");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","initialize","initialize");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","iv_len","iv_len");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","reset","reset");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","name","name");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","key_len","key_len");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","set_key","key=");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","update","update");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","set_padding","padding=");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","set_key_len","key_len=");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","set_iv","iv=");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","initialize_copy","initialize_copy");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","pkcs5_keyivgen","pkcs5_keyivgen");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","update_deprecated","<<");
        runtime.addBoundMethod("org.jruby.ext.openssl.Cipher","encrypt","encrypt");
    }
    static {
     }
}
