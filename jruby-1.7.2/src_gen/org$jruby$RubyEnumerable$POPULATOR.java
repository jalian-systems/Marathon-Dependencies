/* THIS FILE IS GENERATED. DO NOT EDIT */
package org.jruby.gen;
import org.jruby.Ruby;
import org.jruby.RubyModule;
import org.jruby.RubyClass;
import org.jruby.CompatVersion;
import org.jruby.anno.TypePopulator;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.Arity;
import org.jruby.runtime.Visibility;
import org.jruby.compiler.ASTInspector;
import java.util.Arrays;
import java.util.List;
public class org$jruby$RubyEnumerable$POPULATOR extends TypePopulator {
    public void populate(RubyModule cls, Class clazz) {
        JavaMethod javaMethod;
        DynamicMethod moduleMethod;
        CompatVersion compatVersion = cls.getRuntime().getInstanceConfig().getCompatVersion();
        Ruby runtime = cls.getRuntime();
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$count(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "count", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "count", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("count", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$enum_with_index(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "enum_with_index", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "enum_with_index", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("enum_with_index", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$1$0$drop(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "drop", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "drop", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("drop", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$max_by(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "max_by", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "max_by", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("max_by", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$reverse_each(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "reverse_each", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "reverse_each", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("reverse_each", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$drop_while(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "drop_while", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "drop_while", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("drop_while", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$all_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "all_p", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "all_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("all?", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$minmax(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "minmax", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "minmax", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("minmax", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$partition(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "partition", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "partition", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("partition", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$1$0$include_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "include_p", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "include_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("include?", javaMethod);
        cls.addMethodAtBootTimeOnly("member?", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$cycle(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "cycle", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "cycle", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("cycle", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$find_index(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "find_index", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "find_index", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("find_index", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$min_by(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "min_by", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "min_by", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("min_by", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$any_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "any_p", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "any_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("any?", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$detect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "detect", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "detect", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("detect", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$minmax_by(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "minmax_by", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "minmax_by", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("minmax_by", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$inject(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "inject", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "inject", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("inject", javaMethod);
        cls.addMethodAtBootTimeOnly("reduce", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$min(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "min", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "min", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("min", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$find_all(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "find_all", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "find_all", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("find_all", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$group_by(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "group_by", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "group_by", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("group_by", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$sort(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "sort", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "sort", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("sort", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$max(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "max", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "max", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("max", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$reject(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "reject", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "reject", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("reject", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$1$0$take(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "take", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "take", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("take", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$sort_by(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "sort_by", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "sort_by", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("sort_by", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$select(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "select", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "select", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("select", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$find(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "find", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "find", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("find", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$none_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "none_p", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "none_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("none?", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$one_p(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "one_p", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "one_p", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("one?", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$first(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "first", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "first", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("first", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$take_while(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "take_while", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "take_while", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("take_while", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$1$0$grep(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "grep", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "grep", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("grep", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyEnumerable","count","count");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","enum_with_index","enum_with_index");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","drop","drop");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","max_by","max_by");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","reverse_each","reverse_each");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","drop_while","drop_while");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","all_p","all?");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","minmax","minmax");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","partition","partition");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","include_p","include?");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","cycle","cycle");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","find_index","find_index");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","min_by","min_by");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","any_p","any?");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","detect","detect");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","minmax_by","minmax_by");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","inject","inject");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","min","min");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","find_all","find_all");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","group_by","group_by");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","sort","sort");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","max","max");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","reject","reject");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","take","take");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","sort_by","sort_by");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","select","select");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","find","find");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","none_p","none?");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","one_p","one?");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","first","first");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","take_while","take_while");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","grep","grep");
        if (compatVersion == CompatVersion.RUBY1_8 || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$zip(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "zip", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "zip", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("zip", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$each_with_index(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "each_with_index", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "each_with_index", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_with_index", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$to_a(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "to_a", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "to_a", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("to_a", javaMethod);
        cls.addMethodAtBootTimeOnly("entries", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$collect(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "collect", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "collect", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("collect", javaMethod);
        cls.addMethodAtBootTimeOnly("map", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyEnumerable","zip","zip");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","each_with_index","each_with_index");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","to_a","to_a");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","collect","collect");
        }
        if (compatVersion.is1_9() || compatVersion == CompatVersion.BOTH) {
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$zip19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "zip19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "zip19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("zip", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$each_with_index19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each_with_index19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "each_with_index19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_with_index", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$collect_concat19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "collect_concat19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "collect_concat19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("collect_concat", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$chunk(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "chunk", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "chunk", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("chunk", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$flat_map19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "flat_map19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "flat_map19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("flat_map", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$map19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "map19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "map19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("map", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$each_entry(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "each_entry", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "each_entry", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject[].class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_entry", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$1$0$each_with(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 1, "each_with", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "each_with", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("each_with_object", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$to_a19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, -1, "to_a19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "to_a19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class});
        cls.addMethodAtBootTimeOnly("to_a", javaMethod);
        cls.addMethodAtBootTimeOnly("entries", javaMethod);
        javaMethod = new org.jruby.RubyEnumerable$INVOKER$s$0$0$collect19(cls, Visibility.PUBLIC);
        populateMethod(javaMethod, 0, "collect19", true, CallConfiguration.FrameNoneScopeNone, false, org.jruby.RubyEnumerable.class, "collect19", org.jruby.runtime.builtin.IRubyObject.class, new Class[] {org.jruby.runtime.ThreadContext.class, org.jruby.runtime.builtin.IRubyObject.class, org.jruby.runtime.Block.class});
        cls.addMethodAtBootTimeOnly("collect", javaMethod);
        runtime.addBoundMethod("org.jruby.RubyEnumerable","zip19","zip");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","each_with_index19","each_with_index");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","collect_concat19","collect_concat");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","chunk","chunk");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","flat_map19","flat_map");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","map19","map");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","each_entry","each_entry");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","each_with","each_with_object");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","to_a19","to_a");
        runtime.addBoundMethod("org.jruby.RubyEnumerable","collect19","collect");
        }
    }
    static {
     }
}
